/*
   ____    _ __           ____               __    ____
  / __/___(_) /  ___ ____/ __ \__ _____ ___ / /_  /  _/__  ____
 _\ \/ __/ / _ \/ -_) __/ /_/ / // / -_|_-</ __/ _/ // _ \/ __/
/___/\__/_/_.__/\__/_/  \___\_\_,_/\__/___/\__/ /___/_//_/\__(_)

Copyright 2008 SciberQuest Inc.

*/
#ifndef __pqSC11DemoReader_h
#define __pqSC11DemoReader_h

#include "pqAutoGeneratedObjectPanel.h"

class QCheckBox;
class QSpinBox;
class QLineEdit;

class pqSC11DemoReader : public pqAutoGeneratedObjectPanel
{
Q_OBJECT
public:
  pqSC11DemoReader(pqProxy *pxy, QWidget *p);
  virtual ~pqSC11DemoReader();

protected slots:
  // Description:
  // This is where we have to communicate our state to the server.
  virtual void accept();

  // Description:
  // Start or stop the demo.
  void RunDemo(bool start);

  // Description:
  // Triggers a pipeline execution.
  void UpdateReader();

  // Description:
  // Render, with no camera manuipulation
  void StillRender();

  // Description:
  // Render, with camera rotating on a circular path
  // of a given height and radius.
  void RotateRender();

  // Put camera in it's initial position, zero frame counter etc.
  void Initialize();

  // Svae/Restore last known values to/from the UI.
  void Save();
  void Restore();

private:

  enum {
    RENDER_STILL=0,
    RENDER_ROTATE=1
    };
  int RenderState;

  size_t Frame;

  QCheckBox *RunButton;

  QSpinBox *TimerInterval;

  QSpinBox *StillFrames;
  QSpinBox *RotateFrames;

  QLineEdit *CamRadius;
  QLineEdit *CamHeight;
  QLineEdit *FocalX;
  QLineEdit *FocalY;
  QLineEdit *FocalZ;
};

#endif
