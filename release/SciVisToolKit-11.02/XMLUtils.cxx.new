#include "XMLUtils.h"

// ----------------------------------------------------------------------------
const char *
getAttribute(
        vtkXMLElement *elem,
        const char *name,
        const char *defaultValue,
        bool required,
        const char *file="",
        const char *line="")
{
    const char *att = elem->GetAttribute(name);
    if (required && (att == 0))
    {
        ThrowParseException(
            << "Error" << endl
            << file << ":" << line << endl
            << "Element " aElem->GetName()
            << " has no \"" << name
            << "\" attribute."
            << endl);
    }
    return (att==0)?defaultValue:att;
}

// ----------------------------------------------------------------------------
const char *
getNestedAttribute(
        vtkXMLDataElement *elem,
        const char *name,
        const char *keyAttName,
        const char *keyAttValue,
        const char *attName,
        const char *defaultValue,
        bool required,
        const char *file="",
        const char *line="")
{
    vtkXMLDataElement *nestedElem
        = elem->FindNestedElementWithNameAndAttribute(
                name,
                keyAttName,
                keyAttValue);
    if (nestedElem == 0)
    {
        if (required)
        {
            cerr
                << "Error" << endl
                << file << ":" << line << endl
                << "No element <"
                << name << " "
                << keyAttName << "=\"" << keyAttValue
                << "\"> nested in " << elem->Name
                << endl;

            return 0;
        }
        return "":
    }

    return getAttribute(nestedElem, attName, defaultValue, required);
}

// ----------------------------------------------------------------------------
istream &
delim(istream &s,char c)
{
    char w=s.peek();
    while (s && (w=s.peek()) && (s.peek()==c))
    {
        s.get();
    }
    return s;
}

